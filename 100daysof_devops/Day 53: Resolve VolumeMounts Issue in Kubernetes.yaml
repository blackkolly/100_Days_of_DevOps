We encountered an issue with our Nginx and PHP-FPM setup on the Kubernetes cluster this morning, which halted its functionality. Investigate and rectify the issue:
The pod name is nginx-phpfpm and configmap name is nginx-config. Identify and fix the problem.
Once resolved, copy /home/thor/index.php file from the jump host to the nginx-container within the nginx document root. After this,
you should be able to access the website using Website button on the top bar.
Note: The kubectl utility on jump_host is configured to operate with the Kubernetes cluster.

1. Diagnose: Check if PHP-FPM container can see the file
kubectl exec nginx-phpfpm -c php-fpm-container -- ls -la /var/www/html/

2. Update nginx ConfigMap (add mime.types)
kubectl apply -f - <<'EOF'
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
    }
    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      
      server {
        listen 8099 default_server;
        listen [::]:8099 default_server;
        root /var/www/html;
        index index.html index.htm index.php;
        server_name _;
        
        location / {
          try_files $uri $uri/ =404;
        }
        
        location ~ \.php$ {
          include fastcgi_params;
          fastcgi_param REQUEST_METHOD $request_method;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;
        }
      }
    }
EOF

3. Copy index.php to PHP-FPM container (THE CRITICAL FIX)
cat /home/thor/index.php | kubectl exec -i nginx-phpfpm -c php-fpm-container -- tee /var/www/html/index.php

4. Verify and test
kubectl exec nginx-phpfpm -c nginx-container -- curl http://localhost:8099/index.php

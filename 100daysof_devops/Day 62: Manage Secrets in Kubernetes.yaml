The Nautilus DevOps team is working to deploy some tools in Kubernetes cluster. Some of the tools are licence based so that licence information needs to be 
stored securely within Kubernetes cluster. Therefore, the team wants to utilize Kubernetes secrets to store those secrets. Below you can find more details about
the requirements:



We already have a secret key file ecommerce.txt under /opt location on jump host. Create a generic secret named ecommerce, it should contain 
the password/license-number present in ecommerce.txt file.

Also create a pod named secret-xfusion.
Configure pod's spec as container name should be secret-container-xfusion, image should be debian with latest tag (remember to mention the tag with image).
Use sleep command for container so that it remains in running state. Consume the created secret and mount it under /opt/cluster within the container.
To verify you can exec into the container secret-container-xfusion, to check the secret key under the mounted path /opt/cluster. Before hitting the 
Check button please make sure pod/pods are in running state, also validation can take some time to complete so keep patience.
Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.



Step 1 — Create the Secret

You already have the file `/opt/ecommerce.txt` on the jump host

Run the following command to create the Kubernetes secret:

kubectl create secret generic ecommerce --from-file=/opt/ecommerce.txt

Step 2 — Create the Pod YAML

Create a file named `secret-xfusion.yaml` with the following content:

```yaml
apiVersion: v1
kind: Pod
metadata:
  name: secret-xfusion
spec:
  containers:
  - name: secret-container-xfusion
    image: debian:latest
    command: ["/bin/bash", "-c", "sleep infinity"]
    volumeMounts:
    - name: secret-volume
      mountPath: /opt/cluster
  volumes:
  - name: secret-volume
    secret:
      secretName: ecommerce

Apply it:

kubectl apply -f secret-xfusion.yaml

Step 3 — Verify the Pod

Check if it’s running:

kubectl get pods

You should see:

secret-xfusion   1/1   Running   0   20s
*Step 4 — Verify the Secret Mount**

Exec into the container:
kubectl exec -it secret-xfusion -- bash

Inside the container, run:
ls /opt/cluster
cat /opt/cluster/ecommerce.txt

Some of the Nautilus team developers are developing a static website and they want to deploy it on Kubernetes cluster. 
They want it to be highly available and scalable. Therefore, based on the requirements, the DevOps team has decided to create a deployment for it with multiple replicas.
Below you can find more details about it:

Create a deployment using nginx image with latest tag only and remember to mention the tag i.e nginx:latest. Name it as nginx-deployment. 
The container should be named as nginx-container, also make sure replica counts are 3.
Create a NodePort type service named nginx-service. The nodePort should be 30011.
Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.



Requirements Recap

Full YAML Manifest

You can create both the Deployment and Service in a single YAML file:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx-container
          image: nginx:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30011

 Apply the Manifest

kubectl apply -f nginx-deployment.yaml

ðŸ§¾ Verify the Deployment and Service

kubectl get deployments
kubectl get pods -l app=nginx
kubectl get svc nginx-service

You should see:

3 pods running for the deployment.
The service exposed on NodePort 30011.

Test the App
From the jump host or any node in the cluster:
curl http://<node-ip>:30011/

You should get the default nginx welcome page response.

Would you like me to also show how to scale this deployment dynamically (for example, from 3 to 5 replicas)?
